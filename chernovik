void	u_putchar(char *s)
{
	if (*s < 2048)
	{
		putchar(*s >> 6 | 0xC0);
		putchar(*s & 63 | 0x80);
	}
	else if (*s < 1 << 16)
	{
		putchar(*s >> 12 | 0xE0);
		putchar(*s >> 6 & 63 | 0x80);
		putchar(*s & 63 | 0x80);
	}
	else if (*s < 1 << 21)
	{
		putchar(*s >> 18 | 0xF0);
		putchar(*s >> 12 & 63 | 0x80);
		putchar(*s >> 6 & 63 | 0x80);
		putchar(*s & 63 | 0x80);
	}
	else if (*s < 1 << 26)
	{
		putchar(*s >> 24 | 0xF8);
		putchar(*s >> 18 & 63 | 0x80);
		putchar(*s >> 12 & 63 | 0x80);
		putchar(*s >> 6 & 63 | 0x80);
		putchar(*s & 63 | 0x80);
	}
	else
	{
		putchar(*s >> 30 | 0xFC);
		putchar(*s >> 24 & 63 | 0x80);
		putchar(*s >> 18 & 63 | 0x80);
		putchar(*s >> 12 & 63 | 0x80);
		putchar(*s >> 6 & 63 | 0x80);
		putchar(*s & 63 | 0x80);
	}
}

static int		ft_putchar_tool_two(int c)
{
	unsigned char	chr;

	if (c < 2097152)
	{
		chr = 240 + c / 32768;
		write(1, &chr, 1);
		c %= 32768;
		chr = 128 + c / 4096;
		write(1, &chr, 1);
		c %= 4096;
		chr = 128 + c / 64;
		write(1, &chr, 1);
		chr = 128 + c % 64;
		write(1, &chr, 1);
		return (4);
	}
	return (-1);
}

static int		ft_putchar_tool_one(int c)
{
	unsigned char	chr;

	if (c < 65536)
	{
		chr = 224 + c / 4096;
		write(1, &chr, 1);
		c %= 4096;
		chr = 128 + c / 64;
		write(1, &chr, 1);
		chr = 128 + c % 64;
		write(1, &chr, 1);
		return (3);
	}
	return (ft_putchar_tool_two(c));
}

int				ft_putchar(int c)
{
	unsigned char	chr;

	if (c <= 255)
	{
		write(1, &c, 1);
		return (1);
	}
	if (c < 2048)
	{
		chr = 192 + c / 64;
		write(1, &chr, 1);
		chr = 128 + c % 64;
		write(1, &chr, 1);
		return (2);
	}
	return (ft_putchar_tool_one(c));
}


f (!pf_is_modifier(str[*i]))
		return (0);
	if (str[*i] == 'l')
	{
		if (str[*i + 1] == 'l' && ++(*i))
			m = LL;
		else
			m = L;
	}
	else if (str[*i] == 'h')
	{
		if (str[*i + 1] == 'h' && ++(*i))
			m = HH;
		else
			m = H;
	}
	else if (str[*i] == 'j')
		m = J;
	else if (str[*i] == 'z')
		m = Z;
	p->modifier = m;
	return ((*i)++ & 0);